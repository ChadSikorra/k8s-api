name: Generate API
on:
  push:
    branches:
      - master
#on:
  #schedule:
  #  - cron: '0 0 * * *'
env:
  LAST_N: 10
jobs:
  get-api-versions:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '7.4'
          tools: composer:v2

      - name: Get Composer Cache Directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Install Composer dependencies
        run: composer install --no-progress --no-suggest --prefer-dist --optimize-autoloader

      - id: set-matrix
        name: Generate API versions matrix
        run: echo "::set-output name=matrix::$(vendor/bin/k8s-api api-versions --last-n $LAST_N)"
  generate-api:
    needs: get-api-versions
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix: ${{fromJson(needs.get-api-versions.outputs.matrix)}}
    steps:
      - name: Checkout
        uses: actions/checkout@v1
        with:
          ref: master

      - name: Determine API branch information for ${{ matrix.api-version }}
        id: api-branch
        env:
          API_VERSION: ${{ matrix.api-version }}
        run: |
          BRANCH_NAME="${API_VERSION%.*}.x"
          INITIAL_TAG="${API_VERSION%.*}.0"
          echo "::set-output name=branch::$(echo $BRANCH_NAME)"
          echo "::set-output name=initial_tag::$(echo INITIAL_TAG)"
          remote_exists=$(git ls-remote --heads origin $BRANCH_NAME)
          if [[ -z ${remote_exists} ]]; then
              echo "::set-output name=create::$(echo 1)"
          fi

      - name: Create Branch if Needed
        if: steps.api-branch.outputs.create
        uses: peterjgrainger/action-create-branch@v2.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          branch: ${{ steps.api-branch.outputs.branch }}

      - name: Checkout
        uses: actions/checkout@v1
        with:
          ref: ${{ steps.api-branch.outputs.branch }}

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '7.4'
          tools: composer:v2

      - name: Get Composer Cache Directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Install Composer dependencies
        run: composer install --no-progress --prefer-dist

      - name: Cache dependencies
        uses: actions/cache@v1
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Generate API for version ${{ matrix.api-version }}
        run: vendor/bin/k8s-api generate --api-version ${{ matrix.api-version }}

      - name: Run static analysis
        run: composer analyse

      - name: Commit changes
        id: commit-changes
        uses: EndBug/add-and-commit@v6
        with:
          author_name: Chad Sikorra
          author_email: Chad.Sikorra@gmail.com
          message: 'Auto-generate API code.'
          add: '["src", ".k8s-api.json"]'
          push: true

      - name: Bump version and push tag
        if: steps.commit-changes.outputs.committed
        env:
          INITIAL_TAG: ${{ steps.api-branch.outputs.branch }}
        run: |
          git config user.name ChadSikorra
          git config user.email Chad.Sikorra@gmail.com

          CURRENT_TAG=$(git describe --abbrev=0)
          if [[ -z $CURRENT_TAG ]]; then
              git tag $INITIAL_TAG
          else
              PATCH_VERSION=${CURRENT_TAG##*[!0-9]}
              MAJOR_MINOR=${CURRENT_TAG%%$n}
              NEW_TAG=$MAJOR_MINOR$((PATCH_VERSION+1))

              git tag $NEW_TAG
          fi

          git push --follow-tags
